En todo momento podemos utilizar git help o git help <comando> 


1) git init 

inicia el repositorio
crea la carpeta oculta .git
se ejecuta una vez por proyecto
en VS Code se pintan los archivos de color verde (aparece una U de untracked)

2) git status -s ó --short

a diferencia de si ejecutamos "git status" solamente, nos indica en una línea el estado de los archivos
aparecen con el símbolo ?? los archivos sin trackear. los archivos agregados aparecen con una "A" verde (added).
los que fueron añadidos Y modificados aparecen con "AM".

hasta ahora los archivos estan en el working directory

3) git add 'archivo x.txt'
o git add . (agrega todos los archivos en la carpeta actual)

envia archivos al staging area (index)

4) hacemos modificaciones al archivo mientras está en el working directory:
aparece una linea amarilla en VS Code (modificado) o una linea cyan (nuevo) y una 'M' a la izquierda del nombre del archivo.
para comprobar los cambios en git ejecutar: 
git status -u (untracked)
git status -v -v (verbose) -> muestra las lineas modificadas que no estan añadidas al index (en rojo y verde).

5) para actualizar los cambios ejecutar: git add -u 
(update) 
o directamente git add 'nombredearchivo.txt'

6) git commit -m "mensaje"
registra los cambios en el repositorio LOCAL.
es el primer snapshot del código acompañado de un mensaje log que describe esos cambioss

